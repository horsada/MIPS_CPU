$date
	Thu Dec 17 14:22:32 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module mips_cpu_bus_tb $end
$var wire 1 ! waitrequest $end
$var wire 32 " writedata [31:0] $end
$var wire 1 # write $end
$var wire 32 $ register_v0 [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 1 & read $end
$var wire 4 ' byteenable [3:0] $end
$var wire 32 ( address [31:0] $end
$var wire 1 ) active $end
$var reg 1 * clk $end
$var reg 1 + reset $end
$scope module cpuInst $end
$var wire 1 * clk $end
$var wire 32 , register_v0 [31:0] $end
$var wire 1 + reset $end
$var wire 1 ! waitrequest $end
$var wire 5 - shift [4:0] $end
$var wire 5 . rt [4:0] $end
$var wire 5 / rs [4:0] $end
$var wire 32 0 readdata [31:0] $end
$var wire 5 1 rd [4:0] $end
$var wire 32 2 pc_increment [31:0] $end
$var wire 6 3 instr_opcode [5:0] $end
$var wire 26 4 instr_index [25:0] $end
$var wire 16 5 instr_imm [15:0] $end
$var wire 6 6 instr_function [5:0] $end
$var wire 32 7 instr [31:0] $end
$var wire 2 8 alignment [1:0] $end
$var wire 32 9 address_calc [31:0] $end
$var reg 32 : HI [31:0] $end
$var reg 32 ; LO [31:0] $end
$var reg 1 ) active $end
$var reg 32 < address [31:0] $end
$var reg 4 = byteenable [3:0] $end
$var reg 1 > delay $end
$var reg 32 ? ir [31:0] $end
$var reg 1 @ mem_access $end
$var reg 32 A pc [31:0] $end
$var reg 32 B pc_jmp [31:0] $end
$var reg 1 & read $end
$var reg 3 C state [2:0] $end
$var reg 1 # write $end
$var reg 32 D writedata [31:0] $end
$var integer 32 E i [31:0] $end
$upscope $end
$scope module ramInst $end
$var wire 32 F address [31:0] $end
$var wire 4 G byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 8 H r_data0 [7:0] $end
$var wire 8 I r_data1 [7:0] $end
$var wire 8 J r_data2 [7:0] $end
$var wire 8 K r_data3 [7:0] $end
$var wire 1 & read $end
$var wire 1 ! waitrequest $end
$var wire 1 # write $end
$var wire 32 L writedata [31:0] $end
$var wire 8 M w_data3 [7:0] $end
$var wire 8 N w_data2 [7:0] $end
$var wire 8 O w_data1 [7:0] $end
$var wire 8 P w_data0 [7:0] $end
$var wire 32 Q r_data [31:0] $end
$var wire 32 R address_relative [31:0] $end
$var reg 32 S readdata [31:0] $end
$scope begin $unm_blk_102 $end
$var integer 32 T i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111111111111111 T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
b100000 E
bx D
b111 C
bx B
bx A
x@
bx ?
0>
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
b0 ,
0+
0*
0)
bx (
bx '
x&
bx %
b0 $
x#
bx "
0!
$end
#1000
1*
#2000
1+
0*
#3000
b1111 K
b11110000 J
b0 I
b10100 H
b1111111100000000000000010100 Q
b0 R
b10111111110000000000000000000000 (
b10111111110000000000000000000000 <
b10111111110000000000000000000000 F
0#
1&
b1111 '
b1111 =
b1111 G
b10111111110000000000000000000100 2
b10111111110000000000000000000000 A
1)
b0 C
b100000 E
1*
#4000
0+
0*
#5000
b0 K
b0 J
b0 H
b1111 M
b11110000 N
b0 O
b10100 P
b0 8
b11 3
b10100 9
b11111 /
b10000 .
b0 1
b0 -
b10100 6
b10100 5
b11111100000000000000010100 4
b0 '
b0 =
b0 G
0&
b1111111100000000000000010100 7
b1 C
b1111111100000000000000010100 %
b1111111100000000000000010100 0
b1111111100000000000000010100 S
1*
#6000
0*
#7000
b0 K
b0 J
b0 H
bx M
bx N
bx O
bx P
b0 Q
b1 R
b10111111110000000000000000000100 (
b10111111110000000000000000000100 <
b10111111110000000000000000000100 F
1&
b1111 '
b1111 =
b1111 G
1>
b10111111110000000000000001010000 B
b10111111110000000000000000011100 9
b10111111110000000000000000001000 2
b10111111110000000000000000000100 A
b0 C
b1111111100000000000000010100 ?
1*
#8000
0*
#9000
b0 M
b0 N
b0 O
b0 P
b0 3
b0 /
b0 .
b0 6
b0 9
b0 5
b0 4
b0 '
b0 =
b0 G
0&
b0 7
b1 C
b0 %
b0 0
b0 S
1*
#10000
0*
#11000
b1000 H
bx M
bx N
bx O
bx P
b1000 Q
b10100 R
b10111111110000000000000001010000 (
b10111111110000000000000001010000 <
b10111111110000000000000001010000 F
1&
b1111 '
b1111 =
b1111 G
0>
b10111111110000000000000001010100 2
b10111111110000000000000001010000 A
b0 C
b0 ?
1*
#12000
0*
#13000
b0 H
b0 M
b0 N
b0 O
b1000 P
b1000 6
b1000 9
b1000 5
b1000 4
b0 '
b0 =
b0 G
0&
b1000 7
b1 C
b1000 %
b1000 0
b1000 S
1*
#14000
0*
#15000
b100111 K
b11100010 J
b1 H
bx M
bx N
bx O
bx P
b100111111000100000000000000001 Q
b10101 R
b10111111110000000000000001010100 (
b10111111110000000000000001010100 <
b10111111110000000000000001010100 F
1&
b1111 '
b1111 =
b1111 G
1>
b0 B
b10111111110000000000000001011000 2
b10111111110000000000000001010100 A
b0 C
b1000 ?
1*
#16000
0*
#17000
b0 K
b0 J
b0 H
b100111 M
b11100010 N
b0 O
b1 P
b1 8
b1001 3
b11111 /
b10 .
b1 6
b10111111110000000000000000001001 9
b1 5
b11111000100000000000000001 4
b0 '
b0 =
b0 G
0&
b100111111000100000000000000001 7
b1 C
b100111111000100000000000000001 %
b100111111000100000000000000001 0
b100111111000100000000000000001 S
1*
#18000
0*
#19000
b0 K
b0 J
b0 H
bx M
bx N
bx O
bx P
b0 Q
b10000000100000000000000000000 R
b0 (
b0 <
b0 F
1&
b1111 '
b1111 =
b1111 G
b10111111110000000000000000001001 $
b10111111110000000000000000001001 ,
0>
b100 2
b0 A
b0 C
b100111111000100000000000000001 ?
1*
#20000
0*
#21000
0)
b111 C
1*
#22000
0*

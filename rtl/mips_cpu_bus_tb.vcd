$date
	Thu Dec 17 15:06:27 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module mips_cpu_bus_tb $end
$var wire 1 ! waitrequest $end
$var wire 32 " writedata [31:0] $end
$var wire 1 # write $end
$var wire 32 $ register_v0 [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 1 & read $end
$var wire 4 ' byteenable [3:0] $end
$var wire 32 ( address [31:0] $end
$var wire 1 ) active $end
$var reg 1 * clk $end
$var reg 1 + reset $end
$scope module cpuInst $end
$var wire 1 * clk $end
$var wire 32 , register_v0 [31:0] $end
$var wire 1 + reset $end
$var wire 1 ! waitrequest $end
$var wire 5 - shift [4:0] $end
$var wire 5 . rt [4:0] $end
$var wire 5 / rs [4:0] $end
$var wire 32 0 readdata [31:0] $end
$var wire 5 1 rd [4:0] $end
$var wire 32 2 pc_increment [31:0] $end
$var wire 64 3 mult_temp [63:0] $end
$var wire 6 4 instr_opcode [5:0] $end
$var wire 26 5 instr_index [25:0] $end
$var wire 16 6 instr_imm [15:0] $end
$var wire 6 7 instr_function [5:0] $end
$var wire 32 8 instr [31:0] $end
$var wire 2 9 alignment [1:0] $end
$var wire 32 : address_calc [31:0] $end
$var reg 32 ; HI [31:0] $end
$var reg 32 < LO [31:0] $end
$var reg 1 ) active $end
$var reg 32 = address [31:0] $end
$var reg 4 > byteenable [3:0] $end
$var reg 1 ? delay $end
$var reg 32 @ ir [31:0] $end
$var reg 1 A mem_access $end
$var reg 32 B pc [31:0] $end
$var reg 32 C pc_jmp [31:0] $end
$var reg 1 & read $end
$var reg 3 D state [2:0] $end
$var reg 1 # write $end
$var reg 32 E writedata [31:0] $end
$var integer 32 F i [31:0] $end
$upscope $end
$scope module ramInst $end
$var wire 32 G address [31:0] $end
$var wire 4 H byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 8 I r_data0 [7:0] $end
$var wire 8 J r_data1 [7:0] $end
$var wire 8 K r_data2 [7:0] $end
$var wire 8 L r_data3 [7:0] $end
$var wire 1 & read $end
$var wire 1 ! waitrequest $end
$var wire 1 # write $end
$var wire 32 M writedata [31:0] $end
$var wire 8 N w_data3 [7:0] $end
$var wire 8 O w_data2 [7:0] $end
$var wire 8 P w_data1 [7:0] $end
$var wire 8 Q w_data0 [7:0] $end
$var wire 32 R r_data [31:0] $end
$var wire 32 S address_relative [31:0] $end
$var reg 32 T readdata [31:0] $end
$scope begin $unm_blk_102 $end
$var integer 32 U i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111111111111111 U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
b100000 F
bx E
b111 D
bx C
bx B
xA
bx @
0?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
b0 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
b0 ,
0+
0*
0)
bx (
bx '
x&
bx %
b0 $
x#
bx "
0!
$end
#1000
1*
#2000
1+
0*
#3000
b100101 L
b1000 K
b0 J
b101 I
b100101000010000000000000000101 R
b0 S
b10111111110000000000000000000000 (
b10111111110000000000000000000000 =
b10111111110000000000000000000000 G
0#
1&
b1111 '
b1111 >
b1111 H
b10111111110000000000000000000100 2
b10111111110000000000000000000000 B
1)
b0 D
b100000 F
1*
#4000
0+
0*
#5000
b0 L
b0 K
b0 I
b100101 N
b1000 O
b0 P
b101 Q
b1 9
b1001 4
b101 :
b1000 /
b1000 .
b0 1
b0 -
b101 7
b101 6
b1000010000000000000000101 5
b0 '
b0 >
b0 H
0&
b100101000010000000000000000101 8
b1 D
b100101000010000000000000000101 %
b100101000010000000000000000101 0
b100101000010000000000000000101 T
1*
#6000
0*
#7000
b100101 L
b101001 K
b10 I
bx N
bx O
bx P
bx Q
b100101001010010000000000000010 R
b10 9
b1 S
b10111111110000000000000000000100 (
b10111111110000000000000000000100 =
b10111111110000000000000000000100 G
1&
b1111 '
b1111 >
b1111 H
b1010 :
b10111111110000000000000000001000 2
b10111111110000000000000000000100 B
b0 D
b100101000010000000000000000101 @
1*
#8000
0*
#9000
b0 L
b0 K
b0 I
b100101 N
b101001 O
b0 P
b10 Q
b1001 /
b1001 .
b10 7
b10 :
b10 6
b1001010010000000000000010 5
b0 '
b0 >
b0 H
0&
b100101001010010000000000000010 8
b1 D
b100101001010010000000000000010 %
b100101001010010000000000000010 0
b100101001010010000000000000010 T
1*
#10000
0*
#11000
b1 J
b1 L
b1001 K
b11010 I
bx N
bx O
bx P
bx Q
b1000010010000000100011010 R
b0 9
b10 S
b10111111110000000000000000001000 (
b10111111110000000000000000001000 =
b10111111110000000000000000001000 G
1&
b1111 '
b1111 >
b1111 H
b100 :
b10111111110000000000000000001100 2
b10111111110000000000000000001000 B
b0 D
b100101001010010000000000000010 @
1*
#12000
0*
#13000
b0 L
b0 K
b0 J
b0 I
b1 N
b1001 O
b1 P
b11010 Q
b11 9
b0 4
b1000 /
b100 -
b11010 7
b100011111 :
b100011010 6
b1000010010000000100011010 5
b0 '
b0 >
b0 H
0&
b1000010010000000100011010 8
b1 D
b1000010010000000100011010 %
b1000010010000000100011010 0
b1000010010000000100011010 T
1*
#14000
0*
#15000
b0 L
b0 K
b10000 J
b10010 I
bx N
bx O
bx P
bx Q
b1000000010010 R
b11 S
b10111111110000000000000000001100 (
b10111111110000000000000000001100 =
b10111111110000000000000000001100 G
1&
b1111 '
b1111 >
b1111 H
b1 ;
b10 <
b10111111110000000000000000010000 2
b10111111110000000000000000001100 B
b0 D
b1000010010000000100011010 @
1*
#16000
0*
#17000
b0 J
b0 I
b0 N
b0 O
b10000 P
b10010 Q
b10 9
b0 /
b0 .
b10 1
b0 -
b10010 7
b1000000010010 :
b1000000010010 6
b1000000010010 5
b0 '
b0 >
b0 H
0&
b1000000010010 8
b1 D
b1000000010010 %
b1000000010010 0
b1000000010010 T
1*
#18000
0*
#19000
b0 J
b1000 I
bx N
bx O
bx P
bx Q
b1000 R
b100 S
b10111111110000000000000000010000 (
b10111111110000000000000000010000 =
b10111111110000000000000000010000 G
1&
b1111 '
b1111 >
b1111 H
b10 $
b10 ,
b10111111110000000000000000010100 2
b10111111110000000000000000010000 B
b0 D
b1000000010010 @
1*
#20000
0*
#21000
b0 I
b0 N
b0 O
b0 P
b1000 Q
b0 9
b0 1
b1000 7
b1000 :
b1000 6
b1000 5
b0 '
b0 >
b0 H
0&
b1000 8
b1 D
b1000 %
b1000 0
b1000 T
1*
#22000
0*
#23000
b0 I
bx N
bx O
bx P
bx Q
b0 R
b101 S
b10111111110000000000000000010100 (
b10111111110000000000000000010100 =
b10111111110000000000000000010100 G
1&
b1111 '
b1111 >
b1111 H
1?
b0 C
b10111111110000000000000000011000 2
b10111111110000000000000000010100 B
b0 D
b1000 @
1*
#24000
0*
#25000
b0 N
b0 O
b0 P
b0 Q
b0 7
b0 :
b0 6
b0 5
b0 '
b0 >
b0 H
0&
b0 8
b1 D
b0 %
b0 0
b0 T
1*
#26000
0*
#27000
bx N
bx O
bx P
bx Q
b10000000100000000000000000000 S
b0 (
b0 =
b0 G
1&
b1111 '
b1111 >
b1111 H
0?
b100 2
b0 B
b0 D
b0 @
1*
#28000
0*
#29000
0)
b111 D
1*
#30000
0*

$date
	Fri Dec 18 03:42:00 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module mips_cpu_bus_tb $end
$var wire 1 ! waitrequest $end
$var wire 32 " writedata [31:0] $end
$var wire 1 # write $end
$var wire 32 $ register_v0 [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 1 & read $end
$var wire 4 ' byteenable [3:0] $end
$var wire 32 ( address [31:0] $end
$var wire 1 ) active $end
$var reg 1 * clk $end
$var reg 1 + reset $end
$scope module cpuInst $end
$var wire 1 * clk $end
$var wire 32 , register_v0 [31:0] $end
$var wire 1 + reset $end
$var wire 1 ! waitrequest $end
$var wire 5 - shift [4:0] $end
$var wire 5 . rt [4:0] $end
$var wire 5 / rs [4:0] $end
$var wire 32 0 readdata [31:0] $end
$var wire 5 1 rd [4:0] $end
$var wire 32 2 pc_increment [31:0] $end
$var wire 64 3 multu_temp [63:0] $end
$var wire 64 4 mult_temp [63:0] $end
$var wire 6 5 instr_opcode [5:0] $end
$var wire 26 6 instr_index [25:0] $end
$var wire 16 7 instr_imm [15:0] $end
$var wire 6 8 instr_function [5:0] $end
$var wire 32 9 instr [31:0] $end
$var wire 2 : alignment [1:0] $end
$var wire 32 ; address_calc [31:0] $end
$var reg 32 < HI [31:0] $end
$var reg 32 = LO [31:0] $end
$var reg 1 ) active $end
$var reg 32 > address [31:0] $end
$var reg 4 ? byteenable [3:0] $end
$var reg 1 @ delay $end
$var reg 32 A ir [31:0] $end
$var reg 1 B mem_access $end
$var reg 32 C pc [31:0] $end
$var reg 32 D pc_jmp [31:0] $end
$var reg 1 & read $end
$var reg 3 E state [2:0] $end
$var reg 1 # write $end
$var reg 32 F writedata [31:0] $end
$var integer 32 G i [31:0] $end
$upscope $end
$scope module ramInst $end
$var wire 32 H address [31:0] $end
$var wire 4 I byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 8 J r_data0 [7:0] $end
$var wire 8 K r_data1 [7:0] $end
$var wire 8 L r_data2 [7:0] $end
$var wire 8 M r_data3 [7:0] $end
$var wire 1 & read $end
$var wire 1 ! waitrequest $end
$var wire 1 # write $end
$var wire 32 N writedata [31:0] $end
$var wire 8 O w_data3 [7:0] $end
$var wire 8 P w_data2 [7:0] $end
$var wire 8 Q w_data1 [7:0] $end
$var wire 8 R w_data0 [7:0] $end
$var wire 32 S r_data [31:0] $end
$var wire 32 T address_relative [31:0] $end
$var reg 32 U readdata [31:0] $end
$scope begin $unm_blk_106 $end
$var integer 32 V i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111111111111111 V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
b100000 G
bx F
b111 E
bx D
bx C
xB
bx A
0@
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
b0 4
b0 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
b0 ,
0+
0*
0)
bx (
bx '
x&
bx %
b0 $
x#
bx "
0!
$end
#1000
1*
#2000
1+
0*
#3000
b111100 M
b10 L
b0 K
b1 J
b111100000000100000000000000001 S
b0 T
b10111111110000000000000000000000 (
b10111111110000000000000000000000 >
b10111111110000000000000000000000 H
0#
1&
b1111 '
b1111 ?
b1111 I
b10111111110000000000000000000100 2
b10111111110000000000000000000000 C
1)
b0 E
b100000 G
1*
#4000
0+
0*
#5000
b0 M
b0 L
b0 J
b111100 O
b10 P
b0 Q
b1 R
b1 :
b1111 5
b1 ;
b0 /
b10 .
b0 1
b0 -
b1 8
b1 7
b100000000000000001 6
b0 '
b0 ?
b0 I
0&
b111100000000100000000000000001 9
b1 E
b111100000000100000000000000001 %
b111100000000100000000000000001 0
b111100000000100000000000000001 U
1*
#6000
0*
#7000
b1011 M
b11110000 L
b10000 J
bx O
bx P
bx Q
bx R
b1011111100000000000000010000 S
b1 T
b10111111110000000000000000000100 (
b10111111110000000000000000000100 >
b10111111110000000000000000000100 H
1&
b1111 '
b1111 ?
b1111 I
b10000000000000000 $
b10000000000000000 ,
b10111111110000000000000000001000 2
b10111111110000000000000000000100 C
b0 E
b111100000000100000000000000001 A
1*
#8000
0*
#9000
b0 M
b0 L
b0 J
b1011 O
b11110000 P
b0 Q
b10000 R
b0 :
b10 5
b11111 /
b10000 .
b10000 8
b10000 ;
b10000 7
b11111100000000000000010000 6
b0 '
b0 ?
b0 I
0&
b1011111100000000000000010000 9
b1 E
b1011111100000000000000010000 %
b1011111100000000000000010000 0
b1011111100000000000000010000 U
1*
#10000
0*
#11000
b0 M
b0 L
b0 J
bx O
bx P
bx Q
bx R
b0 S
b10 T
b10111111110000000000000000001000 (
b10111111110000000000000000001000 >
b10111111110000000000000000001000 H
1&
b1111 '
b1111 ?
b1111 I
1@
b10111111110000000000000001000000 D
b10111111110000000000000000001100 2
b10111111110000000000000000001000 C
b0 E
b1011111100000000000000010000 A
1*
#12000
0*
#13000
b0 O
b0 P
b0 Q
b0 R
b0 5
b0 /
b0 .
b0 8
b0 ;
b0 7
b0 6
b0 '
b0 ?
b0 I
0&
b0 9
b1 E
b0 %
b0 0
b0 U
1*
#14000
0*
#15000
b1000 J
bx O
bx P
bx Q
bx R
b1000 S
b10000 T
b10111111110000000000000001000000 (
b10111111110000000000000001000000 >
b10111111110000000000000001000000 H
1&
b1111 '
b1111 ?
b1111 I
0@
b10111111110000000000000001000100 2
b10111111110000000000000001000000 C
b0 E
b0 A
1*
#16000
0*
#17000
b0 J
b0 O
b0 P
b0 Q
b1000 R
b1000 8
b1000 ;
b1000 7
b1000 6
b0 '
b0 ?
b0 I
0&
b1000 9
b1 E
b1000 %
b1000 0
b1000 U
1*
#18000
0*
#19000
b100100 M
b1000010 L
b10 J
bx O
bx P
bx Q
bx R
b100100010000100000000000000010 S
b10001 T
b10111111110000000000000001000100 (
b10111111110000000000000001000100 >
b10111111110000000000000001000100 H
1&
b1111 '
b1111 ?
b1111 I
1@
b0 D
b10111111110000000000000001001000 2
b10111111110000000000000001000100 C
b0 E
b1000 A
1*
#20000
0*
#21000
b0 M
b0 L
b0 J
b100100 O
b1000010 P
b0 Q
b10 R
b10 :
b1001 5
b10 /
b10 .
b10 8
b10000000000000010 ;
b10 7
b10000100000000000000010 6
b0 '
b0 ?
b0 I
0&
b100100010000100000000000000010 9
b1 E
b100100010000100000000000000010 %
b100100010000100000000000000010 0
b100100010000100000000000000010 U
1*
#22000
0*
#23000
b0 M
b0 L
b0 J
bx O
bx P
bx Q
bx R
b0 S
b0 :
b10000000100000000000000000000 T
b0 (
b0 >
b0 H
1&
b1111 '
b1111 ?
b1111 I
b10000000000000100 ;
b10000000000000010 $
b10000000000000010 ,
0@
b100 2
b0 C
b0 E
b100100010000100000000000000010 A
1*
#24000
0*
#25000
0)
b111 E
1*
#26000
0*
